name: TUF-on-CI publish

permissions: {}

on:
  workflow_dispatch:
    inputs:
      ref:
        type: string
        required: false

jobs:
  build:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - id: build-and-upload-repository
        uses: theupdateframework/tuf-on-ci/actions/upload-repository@3a44844ab0dc6883849df4039f8494b6f7b5386c # v0.7.0
        with:
          gh_pages: true
          ref: ${{ inputs.ref }}

  deploy-to-pages:
    permissions:
      pages: write
      id-token: write # for authenticating to GH Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy TUF-on-CI repository to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@decdde0ac072f6dcbe43649d82d9c635fff5b4e4 # v4.0.4

  test-deployed-repository:
    needs: deploy-to-pages
    permissions:
      issues: 'write' # for modifying Issues
    uses: ./.github/workflows/test.yml

  deploy-timestamp-to-gcs:
    needs: [build, test-deployed-repository]
    permissions:
      id-token: 'write' # for authenticating with OIDC
    uses: ./.github/workflows/deploy-to-gcs-stage-1.yml
    with:
      gcp_workload_identity_provider: 'projects/843741030650/locations/global/workloadIdentityPools/testpool/providers/testprovider'
      gcp_service_account: ${{ vars.TEST_SERVICE_ACCOUNT }}

  deploy-repository-to-gcs:
    runs-on: ubuntu-latest
    needs: [deploy-timestamp-to-gcs]
    if: needs.deploy-timestamp-to-gcs.outputs.deployed != 'true'
    environment: GCS deployment
    permissions:
      id-token: 'write' # for authenticating with OIDC
    steps:
      - uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: github-pages

      - name: Prepare the data for upload
        run: |
          # Extract the github-pages arcive into ./repository/
          mkdir repository
          tar --directory repository -xvf artifact.tar

      - uses: google-github-actions/auth@a6e2e39c0a0331da29f7fd2c2a20a427e8d3ad1f # v2.1.1
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ inputs.gcp_workload_identity_provider }}
          service_account: ${{ inputs.gcp_service_account }}

      - uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200 # v2.1.0

      - name: Upload repository to GCS
        if: steps.change-detector.outputs.TIMESTAMP_ONLY != 'true'
        run: |
          BUCKET="gs://jku-testbucket/"

          # Upload metadata, make sure we upload timestamp last
          gcloud storage rsync --checksums-only --cache-control=no-store --recursive --exclude=timestamp.json \
              repository/ $BUCKET
          gcloud storage cp --cache-control=no-store repository/metadata/timestamp.json ${BUCKET}metadata/timestamp.json    

  update-issue:
    runs-on: ubuntu-latest
    needs: [build, deploy-to-pages, test-deployed-repository, deploy-timestamp-to-gcs, deploy-repository-to-gcs]
    if: always() && !cancelled()
    permissions:
      issues: 'write' # for modifying Issues
    steps:
      - name: Update the issue for the workflow
        uses: theupdateframework/tuf-on-ci/actions/update-issue@3a44844ab0dc6883849df4039f8494b6f7b5386c # v0.7.0
        with:
          token: ${{ secrets.TUF_ON_CI_TOKEN || secrets.GITHUB_TOKEN }}
          success: ${{ !contains(needs.*.result, 'failure') }}
