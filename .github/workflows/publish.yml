name: TUF-on-CI publish

permissions: {}

on:
  workflow_dispatch:
    inputs:
      ref:
        type: string
        required: false

jobs:
  build:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - id: build-and-upload-repository
        uses: theupdateframework/tuf-on-ci/actions/upload-repository@3a44844ab0dc6883849df4039f8494b6f7b5386c # v0.7.0
        with:
          gh_pages: true
          ref: ${{ inputs.ref }}

  deploy-to-pages:
    permissions:
      pages: write
      id-token: write # for authenticating to GH Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy TUF-on-CI repository to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@decdde0ac072f6dcbe43649d82d9c635fff5b4e4 # v4.0.4

  test-deployed-repository:
    needs: deploy-to-pages
    permissions:
      issues: 'write' # for modifying Issues
    uses: ./.github/workflows/test.yml

  deploy-timestamp-to-gcs:
    needs: [build, test-deployed-repository]
    runs-on: ubuntu-latest
    concurrency: 
      group: gcs-deploy
      cancel-in-progress: true
    permissions:
      id-token: 'write' # For authenticating with the GitHub workflow identity
    outputs:
      deployed: ${{ steps.timestamp-deploy.outputs.deployed }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - id: timestamp-deploy
        uses: ./.github/actions/deploy-gcs
        with:
          gcp_workload_identity_provider: 'projects/843741030650/locations/global/workloadIdentityPools/testpool/providers/testprovider'
          gcp_service_account: ${{ vars.TEST_SERVICE_ACCOUNT }}
          timestamp_only: true

  deploy-repository-to-gcs:
    needs: [deploy-timestamp-to-gcs]
    runs-on: ubuntu-latest
    if: needs.deploy-timestamp-to-gcs.outputs.deployed != 'true'
    environment: GCS deployment
    concurrency: 
      group: gcs-deploy
      cancel-in-progress: true
    permissions:
      id-token: 'write' # for authenticating with OIDC
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: ./.github/actions/deploy-gcs
        with:
          gcp_workload_identity_provider: 'projects/843741030650/locations/global/workloadIdentityPools/testpool/providers/testprovider'
          gcp_service_account: ${{ vars.TEST_SERVICE_ACCOUNT }}
