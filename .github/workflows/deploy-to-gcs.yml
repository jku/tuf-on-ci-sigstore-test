name: Deploy repository to GCS

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      gcp_workload_identity_provider:
        required: true
        type: string
      gcp_service_account:
        required: true
        type: string

permissions: {}

jobs:
  deploy-to-gcs:
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write' # For authenticating with the GitHub workflow identity

    steps:
      - uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: github-pages

      - name: Prepare the data for upload
        run: |
          # Extract the github-pages arcive into ./repository/
          mkdir repository
          tar --directory repository -xvf artifact.tar

      - uses: google-github-actions/auth@a6e2e39c0a0331da29f7fd2c2a20a427e8d3ad1f # v2.1.1
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ inputs.gcp_workload_identity_provider }}
          service_account: ${{ inputs.gcp_service_account }}

      - uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200 # v2.1.0
        #with:
        #  project_id: project-rekor

      - name: Decide if deployment gating is required
        id: change-detector
        run: |
          BUCKET="gs://jku-testbucket/"
          TIMESTAMP_DRYRUN="Would copy file://repository/metadata/timestamp.json to ${BUCKET}metadata/timestamp.json"
          DRYRUN_CLEANUP="^Å´ould set mtime for |^At file://\|^At gs://\|^[[:space:]]*$"

          # Find out which files have changed: run rsync dry-run and cleanup the output 
          gcloud --quiet storage rsync --dry-run --recursive repository/ $BUCKET
          echo "----"
          gcloud --quiet storage rsync --dry-run --recursive repository/ $BUCKET >dryrun 2>&1
          grep -v "$DRYRUN_CLEANUP" dryrun > dryrun-cleaned || true

          if ! grep -q -v "$TIMESTAMP_DRYRUN" dryrun-cleaned; then
            echo No changes detected outside of timestamp
            echo "TIMESTAMP_ONLY=true" >> "$GITHUB_OUTPUT"
          else
            echo Changes detected:
            cat dryrun-cleaned
            echo "TIMESTAMP_ONLY=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload new timestamp to GCS
        if: steps.change-detector.outputs.TIMESTAMP_ONLY == 'true'
        run: |
          BUCKET="gs://jku-testbucket/"

          # Upload timestamp
          gcloud storage cp --cache-control=no-store repository/metadata/timestamp.json ${BUCKET}metadata/timestamp.json

      - name: Upload repository to GCS
        if: steps.change-detector.outputs.TIMESTAMP_ONLY != 'true'
        run: |
          BUCKET="gs://jku-testbucket/"

          # Upload metadata, make sure we upload timestamp last
          gcloud storage rsync --cache-control=no-store --recursive --exclude=timestamp.json \
              repository/ $BUCKET
          gcloud storage cp --cache-control=no-store repository/metadata/timestamp.json $BUCKET
