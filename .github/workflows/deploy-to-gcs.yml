name: Deploy repository to GCS

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      gcp_workload_identity_provider:
        required: true
        type: string
      gcp_service_account:
        required: true
        type: string

permissions: {}

jobs:
  deploy-to-gcs:
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write' # For authenticating with the GitHub workflow identity

    steps:
      - uses: actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe # v4.1.2
        with:
          name: github-pages

      - name: Prepare the data for upload
        run: |
          # Extract the github-pages arcive into ./repository/
          mkdir repository
          tar --directory repository -xvf artifact.tar

      - uses: google-github-actions/auth@a6e2e39c0a0331da29f7fd2c2a20a427e8d3ad1f # v2.1.1
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ inputs.gcp_workload_identity_provider }}
          service_account: ${{ inputs.gcp_service_account }}

      - uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200 # v2.1.0
        #with:
        #  project_id: project-rekor

      - name: Upload repository to GCS
        run: |
          # Make sure we upload timestamp last
          gcloud storage rsync --cache-control=no-store --recursive --exclude=metadata/timestamp.json \
              repository/ gs://jku-testbucket/
          gcloud storage cp --cache-control=no-store repository/metadata/timestamp.json gs://jku-testbucket/metadata/

          # gcloud compute url-maps invalidate-cdn-cache tuf-repo-cdn-lb --path "/*" --async
